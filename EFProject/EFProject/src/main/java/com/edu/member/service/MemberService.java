package com.edu.member.service;

import java.util.List;

import org.springframework.dao.DataAccessException;

import com.edu.member.vo.ArticleVO;
import com.edu.member.vo.CenterVO;
import com.edu.member.vo.JoinregiVO;
import com.edu.member.vo.MemberVO;
import com.edu.member.vo.MemregiVO;
import com.edu.member.vo.PtVO;
import com.edu.member.vo.RecordVO;
import com.edu.member.vo.ReservationVO;

//-----------------------------------------------------------------------------------------------------------
// public interface MemberService
//-----------------------------------------------------------------------------------------------------------
public interface MemberService {
	
	//-----------------------------------------------------------------------------------------------------------
	// 회원 가입 처리
	//-----------------------------------------------------------------------------------------------------------
	public int addMember(MemberVO memberVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// 센터 등록 처리
	//-----------------------------------------------------------------------------------------------------------
	public int addCenter(CenterVO centerVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// 회원 가입 업체명 불러오기
	//-----------------------------------------------------------------------------------------------------------
	public List<CenterVO> listCenter() throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// 업체명 중복 체크
	//-----------------------------------------------------------------------------------------------------------
	public int cNameCheck(CenterVO centerVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// 아이디 중복 체크
	//-----------------------------------------------------------------------------------------------------------
	public int idCheck(MemberVO memberVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// ID 찾기
	//-----------------------------------------------------------------------------------------------------------
	public MemberVO findId(MemberVO memberVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// PWD 찾기
	//-----------------------------------------------------------------------------------------------------------
	public MemberVO findPwd(MemberVO memberVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// 로그인
	//-----------------------------------------------------------------------------------------------------------
	public MemberVO login(MemberVO memberVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// 미등록 강사 목록 조회 (오너 로그인 처리)
	//-----------------------------------------------------------------------------------------------------------
	public List<MemberVO> listMembers1(MemberVO memberVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// 미등록 회원 목록 조회 (오너 로그인 처리)
	//-----------------------------------------------------------------------------------------------------------
	public List<MemberVO> listMembers2(MemberVO memberVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// 오너 페이지 에서 미등록 강사, 회원 등록하기
	//-----------------------------------------------------------------------------------------------------------
	public int registMember(String ef_id) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// 오너 페이지 에서 미등록 강사, 회원 등록 시 m_regi 테이블에 col생성
	//-----------------------------------------------------------------------------------------------------------
	public int insertRegi(String ef_id) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// 마이 페이지 불러오기
	//-----------------------------------------------------------------------------------------------------------
	public MemberVO myPage(MemberVO memberVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// 마이 페이지 정보 수정 하기
	//-----------------------------------------------------------------------------------------------------------	
	public int myUpdate(MemberVO memberVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// 등록 강사 목록 조회
	//-----------------------------------------------------------------------------------------------------------
	public List<MemberVO> listMembers3(MemberVO memberVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// 등록 회원 목록 조회
	//-----------------------------------------------------------------------------------------------------------
	public List<JoinregiVO> listMembers4(MemberVO memberVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// 인원 관리 페이지 강사 탈퇴
	//-----------------------------------------------------------------------------------------------------------
	public int delete(String ef_id) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// 인원 관리 페이지 회원 탈퇴
	//-----------------------------------------------------------------------------------------------------------
	public int regidelete(String ef_id) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// 수강 등록 및 수정 페이지
	//-----------------------------------------------------------------------------------------------------------	
	public MemregiVO courseRegistForm(String ef_id) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// 수강 등록 및 수정 하기
	//-----------------------------------------------------------------------------------------------------------		
	public int courseRegist(MemregiVO memregiVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// 수강 등록 및 수정시 record 테이블에 기록 추가
	//-----------------------------------------------------------------------------------------------------------		
	public int insertRecord(RecordVO recordVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// pt정보 달력에 가져오기(강사)
	//-----------------------------------------------------------------------------------------------------------		
	public List<PtVO> findPt(String ef_id) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// pt리스트 강의현황에 가져오기
	//-----------------------------------------------------------------------------------------------------------		
	public List<PtVO> ptList(MemberVO memberVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// 강의이력
	//-----------------------------------------------------------------------------------------------------------		
	public List<PtVO> ptHistory(MemberVO memberVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// PT 추가
	//-----------------------------------------------------------------------------------------------------------
	public int addPt(PtVO ptVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// PT 삭제
	//-----------------------------------------------------------------------------------------------------------
	public int deletePt(PtVO ptVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// PT 수정
	//-----------------------------------------------------------------------------------------------------------		
	public int updatePt(PtVO ptVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// PT 예약현황 보기
	//-----------------------------------------------------------------------------------------------------------
	public List<ReservationVO> reservationList(ReservationVO reservationVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// pt정보 달력에 가져오기 회원의 강의종류(ef_p_type)
	//-----------------------------------------------------------------------------------------------------------		
	public MemregiVO memberRegi(String ef_id) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// pt정보 달력에 가져오기(회원)
	//-----------------------------------------------------------------------------------------------------------		
	public List<PtVO> findPt2(PtVO ptVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// pt정보 오너 달력에 가져오기
	//-----------------------------------------------------------------------------------------------------------		
	public List<PtVO> findPt3(PtVO ptVO) throws DataAccessException;

	//-----------------------------------------------------------------------------------------------------------
	// 모든 pt리스트 오너 강의현황에 가져오기
	//-----------------------------------------------------------------------------------------------------------		
	public List<PtVO> ptAllList(MemberVO memberVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// 예약 정보 카운트
	//-----------------------------------------------------------------------------------------------------------
	public int countReservation(ReservationVO reservationVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// 예약하기
	//-----------------------------------------------------------------------------------------------------------		
	public int insertReservation(ReservationVO reservationVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// 예약인원 1증가
	//-----------------------------------------------------------------------------------------------------------		
	public int r_personalOnePlus(ReservationVO reservationVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// 참여가능횟수 1감소
	//-----------------------------------------------------------------------------------------------------------		
	public int countOneMiuns(ReservationVO reservationVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// 예약 취소하기
	//-----------------------------------------------------------------------------------------------------------		
	public int deleteReservation(ReservationVO reservationVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// 예약인원 1감소
	//-----------------------------------------------------------------------------------------------------------		
	public int r_personalOneMinus(ReservationVO reservationVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// 참여가능횟수 1증가
	//-----------------------------------------------------------------------------------------------------------		
	public int countOnePlus(ReservationVO reservationVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// 예약한 pt리스트, 나의 예약 현황에 가져오기
	//-----------------------------------------------------------------------------------------------------------		
	public List<PtVO> reservationPtlist(ReservationVO reservationVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// 문의하기 목록 페이지 불러오기
	//-----------------------------------------------------------------------------------------------------------
	public List<ArticleVO> inquiryList(ArticleVO articleVO) throws DataAccessException;
	
	//-----------------------------------------------------------------------------------------------------------
	// 문의사항 등록
	//-----------------------------------------------------------------------------------------------------------
	public int addInquiry(ArticleVO articleVO) throws DataAccessException;

	
} // End - public interface MemberService
